#grafana-deploy.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{monitor_namespace}}
data:
  config.yml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      orgId: 1
      url: http://prometheus:9090
      basicAuth: false
      isDefault: true
      version: 1
      editable: false

    - name: Loki
      type: loki
      access: proxy
      orgId: 1
      url: http://loki:3100
      basicAuth: false
      isDefault: false
      version: 1
      editable: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{monitor_namespace}}
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        # image: grafana/grafana:8.5.27
        image: registry.aliyuncs.com/elvin/grafana:8.5.27
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: grafana
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "{{ grafana_pwd|default('grafana') }}"
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          subPath: grafana
          name: storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-config
      securityContext:
        # fsGroup: 472
        # runAsUser: 472
        fsGroup: 0
        runAsUser: 0
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: storage
        persistentVolumeClaim:
          claimName: {{ k8s_monitor_pvc.name }}
      #尽量与prometheus部署同节点
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:  #软策略
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - prometheus
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{monitor_namespace}}
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
{% if env == 'dev' %}
      nodePort: 30030
  type: NodePort
{% endif %}
  selector:
    app: grafana
