---

apiVersion: v1
kind: Service
metadata:
  name: {{ rabbitmq.name }}
  namespace: {{ namespace }}
  labels:
    app: {{ rabbitmq.name }}
    env: {{ env }}
spec:
  clusterIP: None
  selector:
    app: {{ rabbitmq.name }}
    env: {{ env }}
  ports:
  - name: mq
    port: 5672
    targetPort: 5672
  - name: http
    port: 15672
    targetPort: 15672

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ rabbitmq.name }}
  namespace: {{ namespace }}
spec:
  serviceName: {{ rabbitmq.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ rabbitmq.name }}
      env: {{ env }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "15692"
      labels:
        app.kubernetes.io/name: rabbitmq
        app: {{ rabbitmq.name }}
        env: {{ env }}
    spec:
{% if docker_registry_key|default('') != '' %}
      imagePullSecrets:
      - name: {{ docker_registry_key }}
{% endif %}
{% if k8s_nodeAffinity == true %}
      affinity:
        nodeAffinity:
          {# #硬策略  -#} 
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: x.k8sNodeEnv
                operator: In
                values:
                - all
                - {{env}}
{% endif %}
      # terminationGracePeriodSeconds: 10
      containers:
      - name: {{ rabbitmq.name }}
        image: "{{ deploy_repository_url }}/{{ deploy_public_category }}rabbitmq:{{ rabbitmq.tag }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/rabbitmq
          subPath: {{ rabbitmq.name }}      
          readOnly: false
        - mountPath: "/etc/localtime"
          name: localtime
          readOnly: true
        ports:
        - containerPort: 15672
          name: http
          protocol: TCP
        - containerPort: 5672
          name: mq
          protocol: TCP
        startupProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 60
        readinessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 10
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 30
          timeoutSeconds: 10
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: {{ rabbitmq.user }}
        - name: RABBITMQ_DEFAULT_PASS
          value: {{ rabbitmq.pwd }}
        - name: RABBITMQ_ERLANG_COOKIE
          value: {{ rabbitmq.cookie }}
        - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
          value: '0.5'
        resources:
          requests:
            cpu: {{ rabbitmq.requests_cpu }}
            memory: {{ rabbitmq.requests_ram }}
          limits:
            cpu: {{ rabbitmq.limits_cpu }}
            memory: {{ rabbitmq.limits_ram }}
        lifecycle: 
          postStart: 
            exec: 
              command: 
              - bash
              - -c 
              - |
                echo "alias ll='ls -hl --color=auto'" >>~/.bashrc
                sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list
                sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list
                echo 'apt update' >install.tools.txt
                echo 'apt install -y --no-install-recommends net-tools curl jq vim-tiny inetutils-ping' >>install.tools.txt
                date

      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: datadir
        persistentVolumeClaim:
          claimName: {{ k8s_data_pvc.name }}

